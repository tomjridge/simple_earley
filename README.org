* Simple Earley Parsing

Author: Tom Ridge

An implementation of an Earley-like algorithm, designed for
simplicity.

NOTE by default, installing via opam only installs the library. To run
the examples, check the code out from github, cd to src/bin, and make.

** Documentation

# assert(repo_name=tjr_simple_earley) and below

On github, to preview the documented code, try 
http://tomjridge.github.io/tjr_simple_earley



** Building from source

To build, type ~make~


** Building via opam

This code is not really intended to be installed as a
library. However, in order to advertise the existence of this code,
there needs to be an entry in the opam packages list. So this package
does exist in opam, but nothing is installed - the code just gets
built.

To see the results of the build, invoke e.g.:

# NOTE repo_name

#+BEGIN_SRC
opam install -vvv --keep-build-dir tjr_simple_earley 
#+END_SRC


Then you should be able to locate the executables ~test.native~ and
~simple_test.native~



** Running

There are two executables, ~test.native~ and ~simple_test.native~
(slower). To run the Earley parser with the grammar ~E -> E E E |
"1" | eps~, with an input length of 400 say, in the src directory
type:

#+BEGIN_SRC
time ./test.native 400
#+END_SRC

The output should look like:

#+BEGIN_SRC
$ src $ time ./test.native 400
Right hand side suffix count: 8
400

real	0m2.491s
user	0m2.484s
sys	0m0.004s
#+END_SRC


